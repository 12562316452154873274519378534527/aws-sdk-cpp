configurations {
    Toolset {
    key : "PlatformToolset";
    choices: { v140, v120 };
    };
}

nuget {
    // The nuspec file metadata.
    nuspec {

        // Unique package identifier
        id = AWSSDKCPP-SSM;

        // Version number. Follows NuGet standards. (currently SemVer 1.0)
        version : 0.12.20141106.11;

        // Display name for package.
        title: AWS SDK for C++ (Amazon Simple Systems Management Service);

        // List of package authors.  Braces may be ommited if only one author.
        authors: Amazon Web Services;

        // URL link to the license this package is released under.
        licenseUrl: "http://aws.amazon.com/apache2.0/";

        // URL to the project website (if any).
        projectUrl: "http://github.com/aws/aws-sdk-cpp";

        // URL to an image to be used for package icons.
        iconUrl: "http://media.amazonwebservices.com/aws_singlebox_01.png";

        // If the license this package is being released
        // under has use restrictions, set this to "true".
        requireLicenseAcceptance:false;

        // Brief summary of the package contents. Keep it short!
        summary: "v120 and v140 binary packages along with header files. No custom memory management. Standard Compiler flags used. For more info, see https://github.com/aws/aws-sdk-cpp/blob/master/README.md";

        // Extended description of the package contents.
        description: "<p>This is the Amazon Simple Systems Manager (SSM) API Reference. SSM enables
   * you to remotely manage the configuration of your Amazon EC2 instance using
   * scripts or commands with either an on-demand solution called <i>SSM Run
   * Command</i> or a lightweight instance configuration solution called <i>SSM
   * Config</i>. </p> <p>This references is intended to be used with the SSM User
   * Guide for <a
   * href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/execute-remote-commands.html">Linux</a>
   * or <a
   * href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/execute-remote-commands.html">Windows</a>.</p>
   * <p> <b>Run Command</b> </p> <p>Run Command provides an on-demand experience for
   * executing commands. You can use pre-defined Amazon SSM documents to perform the
   * actions listed later in this section, or you can create your own documents. With
   * these documents, you can remotely configure your instances by sending commands
   * using the <b>Commands</b> page in the <a
   * href="http://console.aws.amazon.com/ec2/">Amazon EC2 console</a>, <a
   * href="http://docs.aws.amazon.com/powershell/latest/reference/items/Amazon_Simple_Systems_Management_cmdlets.html">AWS
   * Tools for Windows PowerShell</a>, the <a
   * href="http://docs.aws.amazon.com/cli/latest/reference/ssm/index.html">AWS
   * CLI</a>, or AWS SDKs.</p> <p>Run Command reports the status of the command
   * execution for each instance targeted by a command. You can also audit the
   * command execution to understand who executed commands, when, and what changes
   * were made. By switching between different SSM documents, you can quickly
   * configure your instances with different types of commands. To get started with
   * Run Command, verify that your environment meets the prerequisites for remotely
   * running commands on EC2 instances (<a
   * href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/remote-commands-prereq.html">Linux</a>
   * or <a
   * href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/remote-commands-prereq.html">Windows</a>).
   * </p> <p/> <p> <b>SSM Config</b> </p> <p>SSM Config is a lightweight instance
   * configuration solution. SSM Config is currently only available for Windows
   * instances. With SSM Config, you can specify a setup configuration for your
   * instances. SSM Config is similar to EC2 User Data, which is another way of
   * running one-time scripts or applying settings during instance launch. SSM Config
   * is an extension of this capability. Using SSM documents, you can specify which
   * actions the system should perform on your instances, including which
   * applications to install, which AWS Directory Service directory to join, which
   * Microsoft PowerShell modules to install, etc. If an instance is missing one or
   * more of these configurations, the system makes those changes. By default, the
   * system checks every five minutes to see if there is a new configuration to apply
   * as defined in a new SSM document. If so, the system updates the instances
   * accordingly. In this way, you can remotely maintain a consistent configuration
   * baseline on your instances. SSM Config is available using the AWS CLI or the AWS
   * Tools for Windows PowerShell. For more information, see <a
   * href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-configuration-manage.html">Managing
   * Windows Instance Configuration</a>.</p> <p>SSM Config and SSM Run Command
   * include the following pre-defined documents.</p> <p> <b>Linux</b> </p> <ul> <li>
   * <p> <b>AWS-RunShellScript</b> to run shell scripts</p> </li> <li> <p>
   * <b>AWS-UpdateSSMAgent</b> to update the Amazon SSM agent</p> </li> </ul> <p/>
   * <p> <b>Windows</b> </p> <ul> <li> <p> <b>AWS-JoinDirectoryServiceDomain</b> to
   * join an AWS Directory</p> </li> <li> <p> <b>AWS-RunPowerShellScript</b> to run
   * PowerShell commands or scripts</p> </li> <li> <p> <b>AWS-UpdateEC2Config</b> to
   * update the EC2Config service</p> </li> <li> <p>
   * <b>AWS-ConfigureWindowsUpdate</b> to configure Windows Update settings</p> </li>
   * <li> <p> <b>AWS-InstallApplication</b> to install, repair, or uninstall software
   * using an MSI package</p> </li> <li> <p> <b>AWS-InstallPowerShellModule</b> to
   * install PowerShell modules </p> </li> <li> <p> <b>AWS-ConfigureCloudWatch</b> to
   * configure Amazon CloudWatch Logs to monitor applications and systems</p> </li>
   * <li> <p> <b>AWS-ListWindowsInventory</b> to collect information about an EC2
   * instance running in Windows.</p> </li> <li> <p> <b>AWS-FindWindowsUpdates</b> to
   * scan an instance and determines which updates are missing.</p> </li> <li> <p>
   * <b>AWS-InstallMissingWindowsUpdates</b> to install missing updates on your EC2
   * instance.</p> </li> <li> <p> <b>AWS-InstallSpecificWindowsUpdates</b> to install
   * one or more specific updates.</p> </li> </ul> <important> <p>The commands or
   * scripts specified in SSM documents run with administrative privilege on your
   * instances because the Amazon SSM agent runs as root on Linux and the EC2Config
   * service runs in the Local System account on Windows. If a user has permission to
   * execute any of the pre-defined SSM documents (any document that begins with
   * AWS-*) then that user also has administrator access to the instance. Delegate
   * access to SSM and Run Command judiciously. This becomes extremely important if
   * you create your own SSM documents. Amazon Web Services does not provide guidance
   * about how to create secure SSM documents. You create SSM documents and delegate
   * access to Run Command at your own risk. As a security best practice, we
   * recommend that you assign access to "AWS-*" documents, especially the
   * AWS-RunShellScript document on Linux and the AWS-RunPowerShellScript document on
   * Windows, to trusted administrators only. You can create SSM documents for
   * specific tasks and delegate access to non-administrators.</p> </important>
   * <p>For information about creating and sharing SSM documents, see the following
   * topics in the SSM User Guide: </p> <ul> <li> <p> <a
   * href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-ssm-doc.html">Creating
   * SSM Documents</a> and <a
   * href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssm-sharing.html">Sharing
   * SSM Documents</a> (Linux)</p> </li> <li> <p> <a
   * href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/create-ssm-doc.html">Creating
   * SSM Documents</a> and <a
   * href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ssm-sharing.html">Sharing
   * SSM Documents</a> (Windows)</p> </li> </ul>

AWS SDK for C++ provides a modern C++ (version C++ 11 or later) interface for Amazon Web Services (AWS). It is meant to be performant and fully functioning with low- and high-level SDKs, while minimizing dependencies and providing platform portability (Windows, OSX, Linux, and mobile).";

        // Copyright notice.
        copyright: Copyright 2016;

        // Tags of arbitrary text for categorizing and filtering.
        tags: { AWS, Amazon, cloud, aws-sdk-cpp, native, ssm };
    };

    dependencies {
       packages: {
            AWSSDKCPP-Core/0.12.1
       }
    }

    files {
        // File location information.  This node is critical for all packages, and is
        // where much of the effort is.  All file paths are relative to this .autopkg
        // file's location.

        // All .h and .hpp  files in <src_root>\include, but not in subdirectories.
        // Included for all conditions.
        nestedInclude: {
            #destination = ${d_include}\aws\ssm;
            "..\include\aws\ssm\**\*.h"
        };

        // Include these specific files in the libpath and "copy to output" path only
        // under these pivot conditions.
        [x64,release,v140,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2015\release\aws-cpp-sdk-ssm.lib };
            bin+= { ..\bin\windows\intel64\vs2015\release\aws-cpp-sdk-ssm.dll };
        }

        [x64,release,v120,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2013\release\aws-cpp-sdk-ssm.lib };
            bin+= { ..\bin\windows\intel64\vs2013\release\aws-cpp-sdk-ssm.dll };
        }

        [x64,debug,v140,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2015\debug\aws-cpp-sdk-ssm.lib };
            bin+= { ..\bin\windows\intel64\vs2015\debug\aws-cpp-sdk-ssm.dll };
        }

        [x64,debug,v120,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2013\debug\aws-cpp-sdk-ssm.lib };
            bin+= { ..\bin\windows\intel64\vs2013\debug\aws-cpp-sdk-ssm.dll };
        }

        [x64,release,v140,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2015\release\aws-cpp-sdk-ssm.lib };
        }

        [x64,release,v120,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2013\release\aws-cpp-sdk-ssm.lib };
        }

        [x64,debug,v140,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2015\debug\aws-cpp-sdk-ssm.lib };
        }

        [x64,debug,v120,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2013\debug\aws-cpp-sdk-ssm.lib };
        }
    };

    targets {
        // Additional declarations to insert into consuming projects after most of the
        // project settings. (These may NOT be modified in visual studio by a developer
        // consuming this package.)
        // This node is often used to set defines that are required that must be set by
        // the consuming project in order to correctly link to the libraries in this
        // package.  Such defines may be set either globally or only set under specific
        // conditions.
        [dynamic]
        Defines += USE_IMPORT_EXPORT;
    }
}
