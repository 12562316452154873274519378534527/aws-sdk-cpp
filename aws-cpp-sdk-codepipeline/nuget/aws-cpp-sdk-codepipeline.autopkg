configurations {
    Toolset {
    key : "PlatformToolset";
    choices: { v140, v120 };
    };
}

nuget {
    // The nuspec file metadata.
    nuspec {

        // Unique package identifier
        id = AWSSDKCPP-CodePipeline;

        // Version number. Follows NuGet standards. (currently SemVer 1.0)
        version : @RUNTIME_MAJOR_VERSION@.20150709.@RUNTIME_MINOR_VERSION@;

        // Display name for package.
        title: AWS SDK for C++ (AWS CodePipeline);

        // List of package authors.  Braces may be ommited if only one author.
        authors: Amazon Web Services;

        // URL link to the license this package is released under.
        licenseUrl: "http://aws.amazon.com/apache2.0/";

        // URL to the project website (if any).
        projectUrl: "http://github.com/aws/aws-sdk-cpp";

        // URL to an image to be used for package icons.
        iconUrl: "http://media.amazonwebservices.com/aws_singlebox_01.png";

        // If the license this package is being released
        // under has use restrictions, set this to "true".
        requireLicenseAcceptance:false;

        // Brief summary of the package contents. Keep it short!
        summary: "v120 and v140 binary packages along with header files. No custom memory management. Standard Compiler flags used. For more info, see https://github.com/aws/aws-sdk-cpp/blob/master/README.md";

        // Extended description of the package contents.
        description: "<fullname>AWS CodePipeline</fullname> <b>Overview</b> <p>This is the AWS
   * CodePipeline API Reference. This guide provides descriptions of the actions and
   * data types for AWS CodePipeline. Some functionality for your pipeline is only
   * configurable through the API. For additional information, see the <a
   * href="http://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html">AWS
   * CodePipeline User Guide</a>.</p> <p>You can use the AWS CodePipeline API to work
   * with pipelines, stages, actions, gates, and transitions, as described below.</p>
   * <p><i>Pipelines</i> are models of automated release processes. Each pipeline is
   * uniquely named, and consists of actions, gates, and stages. </p> <p>You can work
   * with pipelines by calling: <ul><li><a>CreatePipeline</a>, which creates a
   * uniquely-named pipeline.</li> <li><a>DeletePipeline</a>, which deletes the
   * specified pipeline.</li> <li><a>GetPipeline</a>, which returns information about
   * a pipeline structure.</li> <li><a>GetPipelineState</a>, which returns
   * information about the current state of the stages and actions of a
   * pipeline.</li> <li> <a>ListPipelines</a>, which gets a summary of all of the
   * pipelines associated with your account.</li> <li><a>StartPipelineExecution</a>,
   * which runs the the most recent revision of an artifact through the
   * pipeline.</li> <li><a>UpdatePipeline</a>, which updates a pipeline with edits or
   * changes to the structure of the pipeline.</li> </ul></p> <p>Pipelines include
   * <i>stages</i>, which are which are logical groupings of gates and actions. Each
   * stage contains one or more actions that must complete before the next stage
   * begins. A stage will result in success or failure. If a stage fails, then the
   * pipeline stops at that stage and will remain stopped until either a new version
   * of an artifact appears in the source location, or a user takes action to re-run
   * the most recent artifact through the pipeline. You can call
   * <a>GetPipelineState</a>, which displays the status of a pipeline, including the
   * status of stages in the pipeline, or <a>GetPipeline</a>, which returns the
   * entire structure of the pipeline, including the stages of that pipeline. For
   * more information about the structure of stages and actions, also refer to the <a
   * href="http://docs.aws.amazon.com/codepipeline/latest/userguide/pipeline-structure.html">AWS
   * CodePipeline Pipeline Structure Reference</a>.</p> <p>Pipeline stages include
   * <i>actions</i>, which are categorized into categories such as source or build
   * actions performed within a stage of a pipeline. For example, you can use a
   * source action to import artifacts into a pipeline from a source such as Amazon
   * S3. Like stages, you do not work with actions directly in most cases, but you do
   * define and interact with actions when working with pipeline operations such as
   * <a>CreatePipeline</a> and <a>GetPipelineState</a>. </p> <p>Pipelines also
   * include <i>transitions</i>, which allow the transition of artifacts from one
   * stage to the next in a pipeline after the actions in one stage complete.</p>
   * <p>You can work with transitions by calling:</p> <ul>
   * <li><a>DisableStageTransition</a>, which prevents artifacts from transitioning
   * to the next stage in a pipeline.</li> <li><a>EnableStageTransition</a>, which
   * enables transition of artifacts between stages in a pipeline. </li> </ul>
   * <p><b>Using the API to integrate with AWS CodePipeline</b></p> <p>For
   * third-party integrators or developers who want to create their own integrations
   * with AWS CodePipeline, the expected sequence varies from the standard API user.
   * In order to integrate with AWS CodePipeline, developers will need to work with
   * the following items:</p> <ul> <li>Jobs, which are instances of an action. For
   * example, a job for a source action might import a revision of an artifact from a
   * source. <p>You can work with jobs by calling:</p> <ul>
   * <li><a>AcknowledgeJob</a>, which confirms whether a job worker has received the
   * specified job,</li> <li><a>GetJobDetails</a>, which returns the details of a
   * job,</li> <li><a>PollForJobs</a>, which determines whether there are any jobs to
   * act upon, </li> <li><a>PutJobFailureResult</a>, which provides details of a job
   * failure, and</li> <li><a>PutJobSuccessResult</a>, which provides details of a
   * job success.</li> </ul></li> <li>Third party jobs, which are instances of an
   * action created by a partner action and integrated into AWS CodePipeline. Partner
   * actions are created by members of the AWS Partner Network. <p>You can work with
   * third party jobs by calling:</p> <ul><li><a>AcknowledgeThirdPartyJob</a>, which
   * confirms whether a job worker has received the specified job,</li>
   * <li><a>GetThirdPartyJobDetails</a>, which requests the details of a job for a
   * partner action,</li> <li><a>PollForThirdPartyJobs</a>, which determines whether
   * there are any jobs to act upon, </li> <li><a>PutThirdPartyJobFailureResult</a>,
   * which provides details of a job failure, and</li>
   * <li><a>PutThirdPartyJobSuccessResult</a>, which provides details of a job
   * success.</li> </ul></li> </ul>

AWS SDK for C++ provides a modern C++ (version C++ 11 or later) interface for Amazon Web Services (AWS). It is meant to be performant and fully functioning with low- and high-level SDKs, while minimizing dependencies and providing platform portability (Windows, OSX, Linux, and mobile).";

        // Copyright notice.
        copyright: Copyright 2016;

        // Tags of arbitrary text for categorizing and filtering.
        tags: { AWS, Amazon, cloud, aws-sdk-cpp, native, codepipeline };
    };

    dependencies {
       packages: {
            AWSSDKCPP-Core/[@RUNTIME_MAJOR_VERSION@,@RUNTIME_MAJOR_VERSION_UPPER_BOUND@)
       }
    }

    files {
        // File location information.  This node is critical for all packages, and is
        // where much of the effort is.  All file paths are relative to this .autopkg
        // file's location.

        // All .h and .hpp  files in <src_root>\include, but not in subdirectories.
        // Included for all conditions.
        nestedInclude: {
            #destination = ${d_include}\aws\codepipeline;
            "..\include\aws\codepipeline\**\*.h"
        };

        // Include these specific files in the libpath and "copy to output" path only
        // under these pivot conditions.
        [x64,release,v140,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2015\release\aws-cpp-sdk-codepipeline.lib };
            bin+= { ..\bin\windows\intel64\vs2015\release\aws-cpp-sdk-codepipeline.dll };
        }

        [x64,release,v120,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2013\release\aws-cpp-sdk-codepipeline.lib };
            bin+= { ..\bin\windows\intel64\vs2013\release\aws-cpp-sdk-codepipeline.dll };
        }

        [x64,debug,v140,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2015\debug\aws-cpp-sdk-codepipeline.lib };
            bin+= { ..\bin\windows\intel64\vs2015\debug\aws-cpp-sdk-codepipeline.dll };
        }

        [x64,debug,v120,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2013\debug\aws-cpp-sdk-codepipeline.lib };
            bin+= { ..\bin\windows\intel64\vs2013\debug\aws-cpp-sdk-codepipeline.dll };
        }

        [x64,release,v140,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2015\release\aws-cpp-sdk-codepipeline.lib };
        }

        [x64,release,v120,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2013\release\aws-cpp-sdk-codepipeline.lib };
        }

        [x64,debug,v140,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2015\debug\aws-cpp-sdk-codepipeline.lib };
        }

        [x64,debug,v120,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2013\debug\aws-cpp-sdk-codepipeline.lib };
        }
    };

    targets {
        // Additional declarations to insert into consuming projects after most of the
        // project settings. (These may NOT be modified in visual studio by a developer
        // consuming this package.)
        // This node is often used to set defines that are required that must be set by
        // the consuming project in order to correctly link to the libraries in this
        // package.  Such defines may be set either globally or only set under specific
        // conditions.
        [dynamic]
        Defines += USE_IMPORT_EXPORT;
    }
}
