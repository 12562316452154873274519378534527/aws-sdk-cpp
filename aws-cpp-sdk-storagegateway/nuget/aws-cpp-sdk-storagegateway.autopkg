configurations {
    Toolset {
    key : "PlatformToolset";
    choices: { v140, v120 };
    };
}

nuget {
    // The nuspec file metadata.
    nuspec {

        // Unique package identifier
        id = AWSSDKCPP-StorageGateway;

        // Version number. Follows NuGet standards. (currently SemVer 1.0)
        version : 0.12.20130630.11;

        // Display name for package.
        title: AWS SDK for C++ (AWS Storage Gateway);

        // List of package authors.  Braces may be ommited if only one author.
        authors: Amazon Web Services;

        // URL link to the license this package is released under.
        licenseUrl: "http://aws.amazon.com/apache2.0/";

        // URL to the project website (if any).
        projectUrl: "http://github.com/aws/aws-sdk-cpp";

        // URL to an image to be used for package icons.
        iconUrl: "http://media.amazonwebservices.com/aws_singlebox_01.png";

        // If the license this package is being released
        // under has use restrictions, set this to "true".
        requireLicenseAcceptance:false;

        // Brief summary of the package contents. Keep it short!
        summary: "v120 and v140 binary packages along with header files. No custom memory management. Standard Compiler flags used. For more info, see https://github.com/aws/aws-sdk-cpp/blob/master/README.md";

        // Extended description of the package contents.
        description: "<fullname>AWS Storage Gateway Service</fullname> <p>AWS Storage Gateway is the
   * service that connects an on-premises software appliance with cloud-based storage
   * to provide seamless and secure integration between an organization's on-premises
   * IT environment and AWS's storage infrastructure. The service enables you to
   * securely upload data to the AWS cloud for cost effective backup and rapid
   * disaster recovery.</p> <p>Use the following links to get started using the
   * <i>AWS Storage Gateway Service API Reference</i>:</p> <ul> <li> <p> <a
   * href="http://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayHTTPRequestsHeaders.html">AWS
   * Storage Gateway Required Request Headers</a>: Describes the required headers
   * that you must send with every POST request to AWS Storage Gateway.</p> </li>
   * <li> <p> <a
   * href="http://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewaySigningRequests.html">Signing
   * Requests</a>: AWS Storage Gateway requires that you authenticate every request
   * you send; this topic describes how sign such a request.</p> </li> <li> <p> <a
   * href="http://docs.aws.amazon.com/storagegateway/latest/userguide/APIErrorResponses.html">Error
   * Responses</a>: Provides reference information about AWS Storage Gateway
   * errors.</p> </li> <li> <p> <a
   * href="http://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPIOperations.html">Operations
   * in AWS Storage Gateway</a>: Contains detailed descriptions of all AWS Storage
   * Gateway operations, their request parameters, response elements, possible
   * errors, and examples of requests and responses.</p> </li> <li> <p> <a
   * href="http://docs.aws.amazon.com/general/latest/gr/index.html?rande.html">AWS
   * Storage Gateway Regions and Endpoints</a>: Provides a list of each of the s and
   * endpoints available for use with AWS Storage Gateway.</p> </li> </ul> <note>
   * <p>AWS Storage Gateway resource IDs are in uppercase. When you use these
   * resource IDs with the Amazon EC2 API, EC2 expects resource IDs in lowercase. You
   * must change your resource ID to lowercase to use it with the EC2 API. For
   * example, in Storage Gateway the ID for a volume might be
   * <code>vol-1122AABB</code>. When you use this ID with the EC2 API, you must
   * change it to <code>vol-1122aabb</code>. Otherwise, the EC2 API might not behave
   * as expected.</p> </note> <important> <p>IDs for Storage Gateway volumes and
   * Amazon EBS snapshots created from gateway volumes are changing to a longer
   * format. Starting in December 2016, all new volumes and snapshots will be created
   * with a 17-character string. Starting in April 2016, you will be able to use
   * these longer IDs so you can test your systems with the new format. For more
   * information, see <a href="https://aws.amazon.com/ec2/faqs/#longer-ids">Longer
   * EC2 and EBS Resource IDs</a>.</p> <p> For example, a volume ARN with the longer
   * volume ID format will look like this:</p> <p>
   * <code>arn:aws:storagegateway:us-west-2:111122223333:gateway/sgw-12A3456B/volume/vol-1122AABBCCDDEEFFG</code>.</p>
   * <p>A snapshot ID with the longer ID format will look like this:
   * <code>snap-78e226633445566ee</code>.</p> <p>For more information, see <a
   * href="https://forums.aws.amazon.com/ann.jspa?annID=3557">Announcement: Heads-up
   * â€“ Longer AWS Storage Gateway volume and snapshot IDs coming in 2016</a>.</p>
   * </important>

AWS SDK for C++ provides a modern C++ (version C++ 11 or later) interface for Amazon Web Services (AWS). It is meant to be performant and fully functioning with low- and high-level SDKs, while minimizing dependencies and providing platform portability (Windows, OSX, Linux, and mobile).";

        // Copyright notice.
        copyright: Copyright 2016;

        // Tags of arbitrary text for categorizing and filtering.
        tags: { AWS, Amazon, cloud, aws-sdk-cpp, native, storagegateway };
    };

    dependencies {
       packages: {
            AWSSDKCPP-Core/0.12.1
       }
    }

    files {
        // File location information.  This node is critical for all packages, and is
        // where much of the effort is.  All file paths are relative to this .autopkg
        // file's location.

        // All .h and .hpp  files in <src_root>\include, but not in subdirectories.
        // Included for all conditions.
        nestedInclude: {
            #destination = ${d_include}\aws\storagegateway;
            "..\include\aws\storagegateway\**\*.h"
        };

        // Include these specific files in the libpath and "copy to output" path only
        // under these pivot conditions.
        [x64,release,v140,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2015\release\aws-cpp-sdk-storagegateway.lib };
            bin+= { ..\bin\windows\intel64\vs2015\release\aws-cpp-sdk-storagegateway.dll };
        }

        [x64,release,v120,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2013\release\aws-cpp-sdk-storagegateway.lib };
            bin+= { ..\bin\windows\intel64\vs2013\release\aws-cpp-sdk-storagegateway.dll };
        }

        [x64,debug,v140,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2015\debug\aws-cpp-sdk-storagegateway.lib };
            bin+= { ..\bin\windows\intel64\vs2015\debug\aws-cpp-sdk-storagegateway.dll };
        }

        [x64,debug,v120,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2013\debug\aws-cpp-sdk-storagegateway.lib };
            bin+= { ..\bin\windows\intel64\vs2013\debug\aws-cpp-sdk-storagegateway.dll };
        }

        [x64,release,v140,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2015\release\aws-cpp-sdk-storagegateway.lib };
        }

        [x64,release,v120,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2013\release\aws-cpp-sdk-storagegateway.lib };
        }

        [x64,debug,v140,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2015\debug\aws-cpp-sdk-storagegateway.lib };
        }

        [x64,debug,v120,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2013\debug\aws-cpp-sdk-storagegateway.lib };
        }
    };

    targets {
        // Additional declarations to insert into consuming projects after most of the
        // project settings. (These may NOT be modified in visual studio by a developer
        // consuming this package.)
        // This node is often used to set defines that are required that must be set by
        // the consuming project in order to correctly link to the libraries in this
        // package.  Such defines may be set either globally or only set under specific
        // conditions.
        [dynamic]
        Defines += USE_IMPORT_EXPORT;
    }
}
