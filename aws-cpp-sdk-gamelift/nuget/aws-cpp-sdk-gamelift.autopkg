configurations {
    Toolset {
    key : "PlatformToolset";
    choices: { v140, v120 };
    };
}

nuget {
    // The nuspec file metadata.
    nuspec {

        // Unique package identifier
        id = AWSSDKCPP-GameLift;

        // Version number. Follows NuGet standards. (currently SemVer 1.0)
        version : @RUNTIME_MAJOR_VERSION@.20151001.@RUNTIME_MINOR_VERSION@;

        // Display name for package.
        title: AWS SDK for C++ (Amazon GameLift);

        // List of package authors.  Braces may be ommited if only one author.
        authors: Amazon Web Services;

        // URL link to the license this package is released under.
        licenseUrl: "http://aws.amazon.com/apache2.0/";

        // URL to the project website (if any).
        projectUrl: "http://github.com/aws/aws-sdk-cpp";

        // URL to an image to be used for package icons.
        iconUrl: "http://media.amazonwebservices.com/aws_singlebox_01.png";

        // If the license this package is being released
        // under has use restrictions, set this to "true".
        requireLicenseAcceptance:false;

        // Brief summary of the package contents. Keep it short!
        summary: "v120 and v140 binary packages along with header files. No custom memory management. Standard Compiler flags used. For more info, see https://github.com/aws/aws-sdk-cpp/blob/master/README.md";

        // Extended description of the package contents.
        description: "<fullname>Amazon GameLift Service</fullname> <p>Welcome to the <i>Amazon
   * GameLift API Reference</i>. Amazon GameLift is a managed Amazon Web Services
   * (AWS) service for developers who need a scalable, server-based solution for
   * multiplayer games. Amazon GameLift provides setup and deployment of game
   * servers, and handles infrastructure scaling and session management. For more
   * information about the GameLift service, including a feature overview, getting
   * started guide, and tutorial, see the accompanying <a
   * href="http://docs.aws.amazon.com/gamelift/latest/developerguide/">Amazon
   * GameLift Developer Guide</a>.</p> <p>This reference describes the low-level
   * service API for GameLift. You can call this API directly or use the <a
   * href="https://aws.amazon.com/tools/">AWS SDK</a> for your preferred language.
   * The AWS SDK includes a set of high-level GameLift actions multiplayer game
   * sessions. Alternatively, you can use the <a
   * href="https://aws.amazon.com/cli/">AWS command-line interface</a> (CLI) tool,
   * which includes commands for GameLift. For administrative actions, you can use
   * the Amazon GameLift console. </p> <p><b>Managing Game and Player Sessions
   * Through GameLift</b></p> <p>Call these actions from your game clients and/or
   * services to create and manage multiplayer game sessions.</p> <ul> <li> <b>Game
   * sessions</b> <ul> <li><a>CreateGameSession</a></li>
   * <li><a>DescribeGameSessions</a></li> <li><a>DescribeGameSessionDetails</a></li>
   * <li><a>UpdateGameSession</a></li> </ul> </li> <li> <b>Player sessions</b> <ul>
   * <li><a>CreatePlayerSession</a></li> <li><a>CreatePlayerSessions</a></li>
   * <li><a>DescribePlayerSessions</a></li> </ul> </li> <li> <b>Other actions:</b>
   * <ul> <li><a>GetGameSessionLogUrl</a></li> </ul> </li> </ul> <p><b>Setting Up
   * Game Servers</b></p> <p>Use these administrative actions to configure GameLift
   * to host your game servers. When configuring GameLift, you'll need to (1)
   * configure a build for your game and provide build files, and (2) set up one or
   * more fleets to host game sessions.</p> <ul> <li> <b>Build actions:</b> <ul>
   * <li><a>ListBuilds</a></li> <li><a>CreateBuild</a></li>
   * <li><a>DescribeBuild</a></li> <li><a>UpdateBuild</a></li>
   * <li><a>DeleteBuild</a></li> <li><a>RequestUploadCredentials</a></li> </ul> </li>
   * <li> <b>Fleet actions:</b> <ul> <li><a>ListFleets</a></li>
   * <li><a>CreateFleet</a></li> <li>Describe fleet actions: <ul>
   * <li><a>DescribeFleetAttributes</a></li> <li><a>DescribeFleetCapacity</a></li>
   * <li><a>DescribeFleetPortSettings</a></li>
   * <li><a>DescribeFleetUtilization</a></li>
   * <li><a>DescribeEC2InstanceLimits</a></li> <li><a>DescribeFleetEvents</a></li>
   * </ul> </li> <li>Update fleet actions: <ul> <li><a>UpdateFleetAttributes</a></li>
   * <li><a>UpdateFleetCapacity</a></li> <li><a>UpdateFleetPortSettings</a></li>
   * </ul> </li> <li><a>DeleteFleet</a></li> </ul> </li> <li> <b>Alias actions:</b>
   * <ul> <li><a>ListAliases</a></li> <li><a>CreateAlias</a></li>
   * <li><a>DescribeAlias</a></li> <li><a>UpdateAlias</a></li>
   * <li><a>DeleteAlias</a></li> <li><a>ResolveAlias</a></li> </ul> </li> <li>
   * <b>Scaling policy actions:</b> <ul> <li><a>PutScalingPolicy</a></li>
   * <li><a>DescribeScalingPolicies</a></li> <li><a>DeleteScalingPolicy</a></li>
   * </ul> </li> </ul>

AWS SDK for C++ provides a modern C++ (version C++ 11 or later) interface for Amazon Web Services (AWS). It is meant to be performant and fully functioning with low- and high-level SDKs, while minimizing dependencies and providing platform portability (Windows, OSX, Linux, and mobile).";

        // Copyright notice.
        copyright: Copyright 2016;

        // Tags of arbitrary text for categorizing and filtering.
        tags: { AWS, Amazon, cloud, aws-sdk-cpp, native, gamelift };
    };

    dependencies {
       packages: {
            AWSSDKCPP-Core/@RUNTIME_MAJOR_VERSION@.1
       }
    }

    files {
        // File location information.  This node is critical for all packages, and is
        // where much of the effort is.  All file paths are relative to this .autopkg
        // file's location.

        // All .h and .hpp  files in <src_root>\include, but not in subdirectories.
        // Included for all conditions.
        nestedInclude: {
            #destination = ${d_include}\aws\gamelift;
            "..\include\aws\gamelift\**\*.h"
        };

        // Include these specific files in the libpath and "copy to output" path only
        // under these pivot conditions.
        [x64,release,v140,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2015\release\aws-cpp-sdk-gamelift.lib };
            bin+= { ..\bin\windows\intel64\vs2015\release\aws-cpp-sdk-gamelift.dll };
        }

        [x64,release,v120,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2013\release\aws-cpp-sdk-gamelift.lib };
            bin+= { ..\bin\windows\intel64\vs2013\release\aws-cpp-sdk-gamelift.dll };
        }

        [x64,debug,v140,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2015\debug\aws-cpp-sdk-gamelift.lib };
            bin+= { ..\bin\windows\intel64\vs2015\debug\aws-cpp-sdk-gamelift.dll };
        }

        [x64,debug,v120,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2013\debug\aws-cpp-sdk-gamelift.lib };
            bin+= { ..\bin\windows\intel64\vs2013\debug\aws-cpp-sdk-gamelift.dll };
        }

        [x64,release,v140,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2015\release\aws-cpp-sdk-gamelift.lib };
        }

        [x64,release,v120,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2013\release\aws-cpp-sdk-gamelift.lib };
        }

        [x64,debug,v140,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2015\debug\aws-cpp-sdk-gamelift.lib };
        }

        [x64,debug,v120,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2013\debug\aws-cpp-sdk-gamelift.lib };
        }
    };

    targets {
        // Additional declarations to insert into consuming projects after most of the
        // project settings. (These may NOT be modified in visual studio by a developer
        // consuming this package.)
        // This node is often used to set defines that are required that must be set by
        // the consuming project in order to correctly link to the libraries in this
        // package.  Such defines may be set either globally or only set under specific
        // conditions.
        [dynamic]
        Defines += USE_IMPORT_EXPORT;
    }
}
