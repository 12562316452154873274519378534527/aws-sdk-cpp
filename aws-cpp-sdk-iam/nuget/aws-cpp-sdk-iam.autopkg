configurations {
    Toolset {
    key : "PlatformToolset";
    choices: { v140, v120 };
    };
}

nuget {
    // The nuspec file metadata.
    nuspec {

        // Unique package identifier
        id = AWSSDKCPP-IAM;

        // Version number. Follows NuGet standards. (currently SemVer 1.0)
        version : 0.12.20100508.10;

        // Display name for package.
        title: AWS SDK for C++ (AWS Identity and Access Management);

        // List of package authors.  Braces may be ommited if only one author.
        authors: Amazon Web Services;

        // URL link to the license this package is released under.
        licenseUrl: "http://aws.amazon.com/apache2.0/";

        // URL to the project website (if any).
        projectUrl: "http://github.com/aws/aws-sdk-cpp";

        // URL to an image to be used for package icons.
        iconUrl: "http://media.amazonwebservices.com/aws_singlebox_01.png";

        // If the license this package is being released
        // under has use restrictions, set this to "true".
        requireLicenseAcceptance:false;

        // Brief summary of the package contents. Keep it short!
        summary: "v120 and v140 binary packages along with header files. No custom memory management. Standard Compiler flags used. For more info, see https://github.com/aws/aws-sdk-cpp/blob/master/README.md";

        // Extended description of the package contents.
        description: "<fullname>AWS Identity and Access Management</fullname> <p>AWS Identity and
   * Access Management (IAM) is a web service that you can use to manage users and
   * user permissions under your AWS account. This guide provides descriptions of IAM
   * actions that you can call programmatically. For general information about IAM,
   * see <a href="http://aws.amazon.com/iam/">AWS Identity and Access Management
   * (IAM)</a>. For the user guide for IAM, see <a
   * href="http://docs.aws.amazon.com/IAM/latest/UserGuide/">Using IAM</a>. </p>
   * <note> <p>AWS provides SDKs that consist of libraries and sample code for
   * various programming languages and platforms (Java, Ruby, .NET, iOS, Android,
   * etc.). The SDKs provide a convenient way to create programmatic access to IAM
   * and AWS. For example, the SDKs take care of tasks such as cryptographically
   * signing requests (see below), managing errors, and retrying requests
   * automatically. For information about the AWS SDKs, including how to download and
   * install them, see the <a href="http://aws.amazon.com/tools/">Tools for Amazon
   * Web Services</a> page. </p> </note> <p>We recommend that you use the AWS SDKs to
   * make programmatic API calls to IAM. However, you can also use the IAM Query API
   * to make direct calls to the IAM web service. To learn more about the IAM Query
   * API, see <a
   * href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
   * Query Requests</a> in the <i>Using IAM</i> guide. IAM supports GET and POST
   * requests for all actions. That is, the API does not require you to use GET for
   * some actions and POST for others. However, GET requests are subject to the
   * limitation size of a URL. Therefore, for operations that require larger sizes,
   * use a POST request. </p> <p> <b>Signing Requests</b> </p> <p>Requests must be
   * signed using an access key ID and a secret access key. We strongly recommend
   * that you do not use your AWS account access key ID and secret access key for
   * everyday work with IAM. You can use the access key ID and secret access key for
   * an IAM user or you can use the AWS Security Token Service to generate temporary
   * security credentials and use those to sign requests.</p> <p>To sign requests, we
   * recommend that you use <a
   * href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
   * Version 4</a>. If you have an existing application that uses Signature Version
   * 2, you do not have to update it to use Signature Version 4. However, some
   * operations now require Signature Version 4. The documentation for operations
   * that require version 4 indicate this requirement. </p> <p> <b>Additional
   * Resources</b> </p> <p>For more information, see the following:</p> <ul> <li> <p>
   * <a
   * href="http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html">AWS
   * Security Credentials</a>. This topic provides general information about the
   * types of credentials used for accessing AWS. </p> </li> <li> <p> <a
   * href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAMBestPractices.html">IAM
   * Best Practices</a>. This topic presents a list of suggestions for using the IAM
   * service to help secure your AWS resources. </p> </li> <li> <p> <a
   * href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing
   * AWS API Requests</a>. This set of topics walk you through the process of signing
   * a request using an access key ID and secret access key. </p> </li> </ul>

AWS SDK for C++ provides a modern C++ (version C++ 11 or later) interface for Amazon Web Services (AWS). It is meant to be performant and fully functioning with low- and high-level SDKs, while minimizing dependencies and providing platform portability (Windows, OSX, Linux, and mobile).";

        // Copyright notice.
        copyright: Copyright 2016;

        // Tags of arbitrary text for categorizing and filtering.
        tags: { AWS, Amazon, cloud, aws-sdk-cpp, native, iam };
    };

    dependencies {
       packages: {
            AWSSDKCPP-Core/0.12.1
       }
    }

    files {
        // File location information.  This node is critical for all packages, and is
        // where much of the effort is.  All file paths are relative to this .autopkg
        // file's location.

        // All .h and .hpp  files in <src_root>\include, but not in subdirectories.
        // Included for all conditions.
        nestedInclude: {
            #destination = ${d_include}\aws\iam;
            "..\include\aws\iam\**\*.h"
        };

        // Include these specific files in the libpath and "copy to output" path only
        // under these pivot conditions.
        [x64,release,v140,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2015\release\aws-cpp-sdk-iam.lib };
            bin+= { ..\bin\windows\intel64\vs2015\release\aws-cpp-sdk-iam.dll };
        }

        [x64,release,v120,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2013\release\aws-cpp-sdk-iam.lib };
            bin+= { ..\bin\windows\intel64\vs2013\release\aws-cpp-sdk-iam.dll };
        }

        [x64,debug,v140,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2015\debug\aws-cpp-sdk-iam.lib };
            bin+= { ..\bin\windows\intel64\vs2015\debug\aws-cpp-sdk-iam.dll };
        }

        [x64,debug,v120,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2013\debug\aws-cpp-sdk-iam.lib };
            bin+= { ..\bin\windows\intel64\vs2013\debug\aws-cpp-sdk-iam.dll };
        }

        [x64,release,v140,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2015\release\aws-cpp-sdk-iam.lib };
        }

        [x64,release,v120,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2013\release\aws-cpp-sdk-iam.lib };
        }

        [x64,debug,v140,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2015\debug\aws-cpp-sdk-iam.lib };
        }

        [x64,debug,v120,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2013\debug\aws-cpp-sdk-iam.lib };
        }
    };

    targets {
        // Additional declarations to insert into consuming projects after most of the
        // project settings. (These may NOT be modified in visual studio by a developer
        // consuming this package.)
        // This node is often used to set defines that are required that must be set by
        // the consuming project in order to correctly link to the libraries in this
        // package.  Such defines may be set either globally or only set under specific
        // conditions.
        [dynamic]
        Defines += USE_IMPORT_EXPORT;
    }
}
